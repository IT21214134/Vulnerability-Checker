import express from "express";
import helmet from "helmet";
import mongoose from "mongoose";
import bodyParser from "body-parser";
import cors from "cors";
import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";
import cookieParser from "cookie-parser";
import csrf from "csurf";

const filePath = fileURLToPath(import.meta.url);
const dirName = path.dirname(filePath);
const app = express();
const PORT = process.env.PORT || 9020;

// Disable x-powered-by header to prevent information exposure
app.disable("x-powered-by");

// Use Helmet middleware to secure HTTP headers. This can secure Express app by setting various HTTP headers.
app.use(helmet());

app.use(express.static(path.join(dirName, "uploads")));

const filePath1 = fileURLToPath(import.meta.url);
const dirName1 = path.dirname(filePath1);
app.use(express.static(path.join(dirName1, "UploadUserPostImages")));

dotenv.config();

app.use(cors());
app.use(bodyParser.json());
app.use(cookieParser()); // Add cookie parser middleware

// Set up CSRF protection middleware
const csrfProtection = csrf({
  cookie: {
    httpOnly: true, // Prevent JavaScript from accessing the CSRF cookie
    secure: process.env.NODE_ENV === "production", // Send cookie only over HTTPS in production
    sameSite: "strict", // Prevent CSRF attacks from other sites
  },
});
app.use(csrfProtection);

// Route to get CSRF token
app.get("/csrf-token", (req, res) => {
  res.json({ csrfToken: req.csrfToken() });
});

const URL = process.env.MONGODB_URL;

// Mongoose connection
mongoose.connect(URL, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

app.listen(PORT, () => {
  console.log("***************************************");
  console.log(`Server Running on port number : ${PORT}`);
});

const connection = mongoose.connection;
connection.once("open", () => {
  console.log("MONGO_DB Connection successful......!!");
  console.log("***************************************");
});

// User account routes
import userAccount from "./Routes/User-Account-Routes.js";
app.use("/user", userAccount);
